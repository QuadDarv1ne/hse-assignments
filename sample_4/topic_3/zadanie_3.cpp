/*
    Задание IX: Решение системы ОДУ методом прогноз-коррекции

    Для решения системы обыкновенных дифференциальных уравнений методом предиктор-корректора на OpenMP, потребуется последовательная программа, которую можно распараллелить с использованием OpenMP.
    Пример на основе метода Эйлера и предсказания.
*/

#include <iostream>
#include <cmath>
#include <omp.h>

const double tmax = 10.0;  // Максимальное значение t
const double tau = 0.001;  // Шаг по времени
const int num_steps = tmax / tau;  // Количество шагов

// Функция f(t, y) для ОДУ
double f(double t, double y) {
    return -y + std::sin(t);  // Пример уравнения: y' = -y + sin(t)
}

int main() {
    double y[num_steps], y_pred[num_steps], y_corr[num_steps];

    // Инициализация начальных условий
    y[0] = 1.0;  // Начальное значение y при t = 0

    // Расчет с использованием предиктор-корректора
    #pragma omp parallel for
    for (int i = 1; i < num_steps; i++) {
        double t = i * tau;
        
        // Прогноз (предсказание)
        y_pred[i] = y[i-1] + tau * f(t - tau, y[i-1]);
        
        // Коррекция
        y_corr[i] = y[i-1] + tau * f(t, y_pred[i]);
        
        // Обновление значения
        y[i] = 0.5 * (y_pred[i] + y_corr[i]);
    }

    // Вывод результатов
    for (int i = 0; i < num_steps; i++) {
        std::cout << "t = " << i * tau << ", y = " << y[i] << std::endl;
    }

    return 0;
}

/*
    Здесь используется метод предиктор-корректор для численного решения ОДУ.
    Мы вычисляем прогноз для следующего шага, затем корректируем его, используя метод Эйлера для более точного решения.
*/
